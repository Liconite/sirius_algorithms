# Сложность алгоритма: O(m*n)

def countSquares(matrix):
    # узнаём размерность матрицы
    m = len(matrix)
    n = len(matrix[0])

    # создаём пустую матрицу
    dp = [[0] * (n + 1) for _ in range(m + 1)]

    ans = 0

    # пробегаемся по матрице
    for i in range(1, m + 1):
        # начинаю с единицы, чтобы не столкнуться с ошибкой
        for j in range(1, n + 1):
            if matrix[i - 1][j - 1] == 1:
                # смотрю на минимальное значение вокруг выбранного элемента и записываем значение в dp
                # добавляю +1, так как [i][j] == 1, то имеем квадрат 1х1
                dp[i][j] = min(dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]) + 1

                # считаем найденый квадрат
                ans += dp[i][j]

    return ans